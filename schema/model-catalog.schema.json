{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "Model Catalog",
    "description": "Schema for defining AI models and model servers, for conversion to Backstage catalog entities",
    "type": "object",
    "anyOf": [
        {
            "required": [
                "models"
            ]
        },
        {
            "required": [
                "modelSever",
                "models"
            ]
        }
    ],
    "properties": {
        "modelServer": {
            "description": "A deployed model server running one or more models, exposed over an API",
            "$ref": "#/$defs/modelServer",
            "type": "object"
        },
        "models": {
            "description": "An array of AI models to be imported into the Backstage catalog",
            "type": "array",
            "items": {
                "description": "An AI model to be imported into the Backstage catalog",
                "$ref": "#/$defs/model",
                "type": "object"
            }
        }
    },
    "additionalProperties": false,
    "$defs": {
        "modelServer": {
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "modelServer",
            "title": "Model Server",
            "description": "Schema for defining AI model servers, for conversion to Backstage catalog entities",
            "type": "object",
            "required": [
                "name",
                "owner",
                "lifecycle",
                "description"
            ],
            "properties": {
                "description": {
                    "description": "A description of the model server and what it's for",
                    "type": "string"
                },
                "API": {
                    "description": "The API metadata associated with the model server",
                    "$ref": "#/$defs/modelServerAPI",
                    "type": "object"
                },
                "authentication": {
                    "description": "Whether or not the model server requires authentication to access",
                    "type": "boolean"
                },
                "homepageURL": {
                    "description": "The URL for the model server's homepage, if present",
                    "type": "string"
                },
                "lifecycle": {
                    "description": "The lifecycle state of the model server API",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the model server",
                    "type": "string"
                },
                "owner": {
                    "description": "The Backstage user that will be responsible for the model server",
                    "type": "string"
                },
                "tags": {
                    "description": "Descriptive tags for the model server",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "usage": {
                    "description": "How to use and interact with the model server",
                    "type": "string"
                },
                "annotations": {
                    "description": "Annotations relating to the model server, in key-value pair format",
                    "type": "object",
                    "additionalProperties": {"type": "string"}
                }
            },
            "additionalProperties": false,
            "$defs": {
                "modelServerAPI": {
                    "$schema": "https://json-schema.org/draft/2020-12/schema",
                    "$id": "modelServerAPI",
                    "title": "Model Server API",
                    "description": "Schema for defining the API exposed by model servers, for conversion to Backstage catalog entities",
                    "type": "object",
                    "required": [
                        "url",
                        "type",
                        "spec"
                    ],
                    "properties": {
                        "type": {
                            "description": "The type of API that the model server exposes",
                            "type": "string",
                            "enum": [
                                "openapi",
                                "asyncapi",
                                "graphql",
                                "grpc"
                            ]
                        },
                        "spec": {
                            "description": "A link to the schema used by the model server API",
                            "type": "string"
                        },
                        "tags": {
                            "description": "Descriptive tags for the model server's API",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "url": {
                            "description": "The URL that the model server's REST API is exposed over, how the model(s) are interacted with",
                            "type": "string"
                        },
                        "annotations": {
                            "description": "Annotations relating to the model, in key-value pair format",
                            "type": "object",
                            "additionalProperties": {"type": "string"}
                        }
                    },
                    "additionalProperties": false
                }
            }
        },
        "model": {
            "$schema": "https://json-schema.org/draft/2020-12/schema",
            "$id": "model",
            "title": "Model",
            "description": "Schema for defining AI models conversion to Backstage catalog entities",
            "type": "object",
            "required": [
                "name",
                "owner",
                "description",
                "lifecycle"
            ],
            "properties": {
                "description": {
                    "description": "A description of the model and what it's for",
                    "type": "string"
                },
                "artifactLocationURL": {
                    "description": "A URL to access the model's artifacts, e.g. on HuggingFace, Minio, Github, etc",
                    "type": "string"
                },
                "ethics": {
                    "description": "Any ethical considerations for the model",
                    "type": "string"
                },
                "license": {
                    "description": "The license used by the model (e.g. Apache-2).",
                    "type": "string"
                },
                "howToUseURL": {
                    "description": "The URL pointing to any specific documentation on how to use the model on the model server",
                    "type": "string"
                },
                "lifecycle": {
                    "description": "The lifecycle state of the model server API",
                    "type": "string"
                },
                "name": {
                    "description": "The name of the model",
                    "type": "string"
                },
                "owner": {
                    "description": "The Backstage user that will be responsible for the model",
                    "type": "string"
                },
                "support": {
                    "description": "Support information for the model / where to open issues",
                    "type": "string"
                },
                "tags": {
                    "description": "Descriptive tags for the model",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "training": {
                    "description": "Information on how the model was trained",
                    "type": "string"
                },
                "usage": {
                    "description": "How to use and interact with the model",
                    "type": "string"
                },
                "annotations": {
                    "description": "Annotations relating to the model, in key-value pair format",
                    "type": "object",
                    "additionalProperties": {"type": "string"}
                }
            },
            "additionalProperties": false
        }
    }
}
